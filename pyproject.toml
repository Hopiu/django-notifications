[tool.poetry]
name = "django-notifications-hq"
version = "2.0.0"
description = "GitHub notifications alike app for Django."
authors = [
    "Justin Quick <justquick@gmail.com>",
    "Yang Yubo <yang@yangyubo.com>",
]
maintainers = [
    # Team members
    "Alvaro Mariano <https://github.com/AlvaroLQueiroz>",
    "Samuel Spencer <https://github.com/LegoStormtroopr)>",
    "YPCrumble <https://github.com/YPCrumble>",

    # Contributors
    "Adriaan <https://github.com/ChocolateCookies>",
    "blag <https://github.com/blag>",
    "Dan DeFelippi <https://github.com/driverdan>",
    "Daniel Shapiro <https://github.com/danxshap>",
    "Fábio C. Barrionuevo da Luz <https://github.com/luzfcb>",
    "fay <https://github.com/fay>",
    "Jesper Håkansson <https://github.com/drager>",
    "Konrad Hałas <https://github.com/konradhalas>",
    "Matthew Schinckel <https://github.com/schinckel>",
    "Mirat Can Bayrak <https://github.com/miratcan>",
    "Peppe Bergqvist <https://github.com/peppelorum>",
    "randomfish <https://github.com/randomfish>",
    "Sandro Rodrigues <https://github.com/srtab>",
    "Utkucan Bıyıklı <https://github.com/UtkucanBykl>",
    "Zhongyuan Zhang <http://github.com/zhang-z>",
]
license = "MIT"
readme = "README.md"
homepage = "https://pypi.org/project/django-notifications-hq"
documentation = "https://pypi.org/project/django-notifications-hq"
repository = "https://github.com/django-notifications/django-notifications"
keywords = [
    "django",
    "notifications",
    "github",
    "action",
    "event",
    "stream",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",

    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
packages = [
    {include = "notifications/*.py"},
    {include = "notifications/migrations/"},
    {include = "notifications/models/"},
    {include = "notifications/templatetags/"},
]
include = [
    "CHANGELOG.md",
    "notifications/locale/",
    "notifications/static/",
    "notifications/templates/",
]

[tool.poetry.dependencies]
python = "^3.8"
django = ">3.2"
swapper = "^1"
bandit = { version = "^1", optional = true }
black = { version = "^23", optional = true }
coverage = {version = "^7.2.7", optional = true }
django-debug-toolbar = {version = "^4", optional = true }
django-test-migrations = {version = "^1.3.0", optional = true }
factory-boy = {version = "^3.2.1", optional = true }
isort = {version = "^5", optional = true }
mypy = {version = "^1", optional = true }
pre-commit = {version = "^3", optional = true }
psycopg2-binary = {version = "^2.9.6", optional = true }
pylint = {version = "^2", optional = true }
pylint-django = {version = "^2", optional = true }
pytest = {version = "^7", optional = true }
pytest-cov = {version = "^4", optional = true }
pytest-django = {version = "^4", optional = true }
pytest-xdist = {version = "^3.3.1", optional = true }
freezegun = {version = "^1.4.0", optional = true}

[tool.poetry.extras]
dev = [
    "django-debug-toolbar",
    "pre-commit",
    "psycopg2-binary",
]
lint = [
    "bandit",
    "black",
    "isort",
    "mypy",
    "pylint",
    "pylint-django",
]
test = [
    "coverage",
    "django-test",
    "django-test-migrations",
    "factory-boy",
    "freezegun",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "pytest-xdist",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.MAIN]
load-plugins = [
    "pylint_django",
    "pylint.extensions.mccabe",
]
ignore-paths = [
    "notifications/migrations/",
]
jobs = 0
django-settings-module = "notifications.settings"
# fail-on=[ # TODO: Investigate why the Pylint results are different in different platforms (macOS and GH actions)
#     "useless-suppression",
# ]


[tool.pylint.DESIGN]
max-locals = 20
max-args = 10
max-parents = 10

[tool.pylint.'MESSAGES CONTROL']
enable = [
    "useless-suppression",
]
disable = [
    "fixme",
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
]

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.TYPECHECK]
ignored-modules = [
    "pytest",
    "factory",
    "freezegun"
]

[tool.black]
line-length = 120
extend-exclude = "migrations/"

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = [
    "notifications/tests",
]

[tool.bandit.assert_used]
skips = ["*test*.py"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--reuse-db -n auto --cov=notifications"
norecursedirs = [
    ".git",
    ".github",
    ".idea",
    ".pytest_cache",
    ".tox",
    ".vscode",
    "dist",
    "django_notifications_hq.egg-info",
]
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py",
]
testpaths = [
    "tests",
    "integration",
]
DJANGO_SETTINGS_MODULE = "notifications.tests.settings_for_tests"
django_debug_mode = "keep"

[tool.coverage.run]
relative_files = true
parallel = true
branch = true

[tool.mypy]
files = "**/*.py"
exclude = "migration/*"
ignore_missing_imports=true
no_namespace_packages=true
